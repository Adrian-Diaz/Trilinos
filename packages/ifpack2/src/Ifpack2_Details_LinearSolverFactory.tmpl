/*
//@HEADER
// ***********************************************************************
//
//       Ifpack2: Tempated Object-Oriented Algebraic Preconditioner Package
//                 Copyright (2009) Sandia Corporation
//
// Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
// license for use of this work by or on behalf of the U.S. Government.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
// 1. Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the Corporation nor the names of the
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY SANDIA CORPORATION "AS IS" AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SANDIA CORPORATION OR THE
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Questions? Contact Michael A. Heroux (maherou@sandia.gov)
//
// ***********************************************************************
//@HEADER
*/

// WARNING: This file is automatically generated by CMake, and written
// to Trilinos' build (not source) directory.  DO NOT EDIT THIS FILE!
// If you run CMake again, it will overwrite any changes that you
// made.  Furthermore, it would be unwise to assume anything about
// this file: it may disappear at any time, and its name, location, or
// contents may change at any time.

#include "TpetraCore_config.h"

#if defined(HAVE_TPETRA_@SC_MACRO_NAME@) && defined(HAVE_TPETRA_@LO_MACRO_NAME@_@GO_MACRO_NAME@) && defined(HAVE_TPETRA_@NT_MACRO_NAME@)

// We need both the decl and def files here, whether or not ETI is on.
#include "Ifpack2_Details_LinearSolverFactory_decl.hpp"
#include "Ifpack2_Details_LinearSolverFactory_def.hpp"
#include "Ifpack2_ETIHelperMacros.h"

#if defined(HAVE_IFPACK2_EXPLICIT_INSTANTIATION)

// Define the Ifpack2 ETI macros and Tpetra typedefs that go along
// with them.
IFPACK2_ETI_MANGLING_TYPEDEFS()

#else

// Unfortunate hack for working around Bug 6380.  The Ifpack2 which
// defines mangled (for use in macros) typedefs for certain Scalar,
// GlobalOrdinal, and Node types, also has an empty definition if ETI
// is OFF.

#ifdef HAVE_TPETRA_COMPLEX_DOUBLE
typedef std::complex<double> std_complex0double0;
#endif // HAVE_TPETRA_COMPLEX_DOUBLE

#ifdef HAVE_TPETRA_COMPLEX_FLOAT
typedef std::complex<float> std_complex0float0;
#endif // HAVE_TPETRA_COMPLEX_FLOAT

#ifdef HAVE_TPETRA_INT_LONG_LONG
typedef long long longlong;
#endif // HAVE_TPETRA_INT_LONG_LONG

#ifdef HAVE_TPETRA_INT_UNSIGNED_LONG
typedef unsigned long unsignedlong;
#endif // HAVE_TPETRA_INT_UNSIGNED_LONG

#ifdef HAVE_TPETRA_@NT_MACRO_NAME@
typedef @NT@ @NT_MANGLED@;
#endif // HAVE_TPETRA_@NT_MACRO_NAME@

#endif // defined(HAVE_IFPACK2_EXPLICIT_INSTANTIATION)


#if defined(HAVE_IFPACK2_EXPLICIT_INSTANTIATION) && defined(HAVE_TPETRA_INST_@SC_MACRO_NAME@) && defined(HAVE_TPETRA_INST_@LO_MACRO_NAME@_@GO_MACRO_NAME@) && defined(HAVE_TPETRA_INST_@NT_MACRO_NAME@)

// Do explicit instantiation of Ifpack2::Details::LinearSolverFactory,
// for Tpetra objects, with the given Tpetra template parameters.
template class Ifpack2::Details::LinearSolverFactory<@SC_MANGLED@, @LO_MANGLED@, @GO_MANGLED@, @NT_MANGLED@>;

// Ditto for the thing that actually registers an Ifpack2::Details::LinearSolverFactory.
template class Ifpack2::Details::RegisterLinearSolverFactory<@SC_MANGLED@, @LO_MANGLED@, @GO_MANGLED@, @NT_MANGLED@>;

#endif


namespace { // (anonymous)

// Register Ifpack2's LinearSolverFactory with the central registry,
// for the given combination of template parameters.  Do this whether
// or not ETI is ON.  This needs to live in an anonymous namespace, in
// order to avoid link-time collisions with other code.
Ifpack2::Details::RegisterLinearSolverFactory<@SC_MANGLED@, @LO_MANGLED@, @GO_MANGLED@, @NT_MANGLED@>
  registerer_Tpetra_@SC_MACRO_NAME@_@LO_MACRO_NAME@_@GO_MACRO_NAME@_@NT_MACRO_NAME@ ;

} // namespace (anonymous)

#endif // defined(HAVE_TPETRA_@SC_MACRO_NAME@) && defined(HAVE_TPETRA_@LO_MACRO_NAME@_@GO_MACRO_NAME@) && defined(HAVE_TPETRA_@NT_MACRO_NAME@)
